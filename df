[33mcommit 8cb0d55edf3851ddcf93075d6cfb3bc61b9e371f[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m)[m
Author: Cau√£ Silva <caua.sndias@gmail.com>
Date:   Fri Oct 3 20:13:33 2025 -0300

    feat: adiciona estrutura inicial para gerenciamento de livros (DTO, Repository, Controller e GlobalExceptionHandler)

[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..66b55c7[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m# Virtual Library API[m[41m [m
[32m+[m
[32m+[m[32m## Project Goal and Description[m
[32m+[m
[32m+[m[32mThis is a backend application built with **Spring Boot** to simulate a virtual library system.[m
[32m+[m
[32m+[m[32mI started this project as a hands-on exercise to **deepen my Spring skills**, specifically focusing on:[m
[32m+[m[32m* Creating clean **RESTful APIs**.[m
[32m+[m[32m* Managing data with **Spring Data JPA**.[m
[32m+[m[32m* Implementing basic **User Authentication**.[m
[32m+[m
[32m+[m[32m## Technology Stack[m
[32m+[m
[32m+[m[32m| Component | Detail |[m
[32m+[m[32m| :--- | :--- |[m
[32m+[m[32m| **Framework** | Spring Boot |[m
[32m+[m[32m| **Language** | Java |[m
[32m+[m[32m| **Database** | H2 Database (in-memory) |[m
[32m+[m[32m| **Architecture** | REST API |[m
[32m+[m
[32m+[m[32m## Key Features[m[41m [m
[32m+[m
[32m+[m[32m* **Book Management:** Create and list books in the catalog.[m
[32m+[m[32m* **User Management:** Create user accounts (for borrowing).[m
[32m+[m[32m* **Borrowing System:** Functionality to **borrow** and **return** books.[m
\ No newline at end of file[m
[1mdiff --git a/curl b/curl[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/pom.xml b/pom.xml[m
[1mindex 0d7c1c7..b2d7c5a 100644[m
[1m--- a/pom.xml[m
[1m+++ b/pom.xml[m
[36m@@ -54,6 +54,10 @@[m
 			<artifactId>spring-boot-starter-test</artifactId>[m
 			<scope>test</scope>[m
 		</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-validation</artifactId>[m
[32m+[m		[32m</dependency>[m
 	</dependencies>[m
 [m
 	<build>[m
[1mdiff --git a/src/main/java/io/desafio/VirtualLibabry/GlobalExpection/BookExceptionHandler.java b/src/main/java/io/desafio/VirtualLibabry/GlobalExpection/BookExceptionHandler.java[m
[1mnew file mode 100644[m
[1mindex 0000000..939bba6[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/io/desafio/VirtualLibabry/GlobalExpection/BookExceptionHandler.java[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mpackage io.desafio.VirtualLibabry.GlobalExpection;[m
[32m+[m
[32m+[m[32mimport io.desafio.VirtualLibabry.controller.BooksController;[m
[32m+[m[32mimport org.springframework.http.HttpStatus;[m
[32m+[m[32mimport org.springframework.http.ResponseEntity;[m
[32m+[m[32mimport org.springframework.http.converter.HttpMessageNotReadableException;[m
[32m+[m[32mimport org.springframework.web.bind.MethodArgumentNotValidException;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ControllerAdvice;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ExceptionHandler;[m
[32m+[m
[32m+[m[32m@ControllerAdvice (basePackageClasses = BooksController.class)[m
[32m+[m[32mpublic class BookExceptionHandler {[m
[32m+[m[32m    // Quando os dados n√£o passaram na valida√ß√£o[m
[32m+[m[32m    @ExceptionHandler (MethodArgumentNotValidException.class)[m
[32m+[m[32m    public ResponseEntity<Object> handleValidationException () {[m
[32m+[m[32m        return ResponseEntity.status(HttpStatus.UNPROCESSABLE_ENTITY).build();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Quando o corpo da requisi√ß√£o est√° ausente ou inv√°lido[m
[32m+[m[32m    @ExceptionHandler (HttpMessageNotReadableException.class)[m
[32m+[m[32m    public ResponseEntity<Object> handleMissingBody () {[m
[32m+[m[32m        return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/main/java/io/desafio/Virtual/Libabry/VirtualLibabryApplication.java b/src/main/java/io/desafio/VirtualLibabry/VirtualLibabryApplication.java[m
[1msimilarity index 89%[m
[1mrename from src/main/java/io/desafio/Virtual/Libabry/VirtualLibabryApplication.java[m
[1mrename to src/main/java/io/desafio/VirtualLibabry/VirtualLibabryApplication.java[m
[1mindex 8793773..205227b 100644[m
[1m--- a/src/main/java/io/desafio/Virtual/Libabry/VirtualLibabryApplication.java[m
[1m+++ b/src/main/java/io/desafio/VirtualLibabry/VirtualLibabryApplication.java[m
[36m@@ -1,4 +1,4 @@[m
[31m-package io.desafio.Virtual.Libabry;[m
[32m+[m[32mpackage io.desafio.VirtualLibabry;[m
 [m
 import org.springframework.boot.SpringApplication;[m
 import org.springframework.boot.autoconfigure.SpringBootApplication;[m
[1mdiff --git a/src/main/java/io/desafio/VirtualLibabry/controller/BooksController.java b/src/main/java/io/desafio/VirtualLibabry/controller/BooksController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..9ca7ede[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/io/desafio/VirtualLibabry/controller/BooksController.java[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32mpackage io.desafio.VirtualLibabry.controller;[m
[32m+[m
[32m+[m[32mimport io.desafio.VirtualLibabry.domainDTO.BookDTO;[m
[32m+[m[32mimport io.desafio.VirtualLibabry.repository.BookRepository;[m
[32m+[m[32mimport jakarta.validation.Valid;[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Autowired;[m
[32m+[m[32mimport org.springframework.http.ResponseEntity;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.*;[m
[32m+[m[32mimport org.springframework.web.servlet.support.ServletUriComponentsBuilder;[m
[32m+[m
[32m+[m[32mimport java.net.URI;[m
[32m+[m
[32m+[m[32m@RestController[m
[32m+[m[32m@RequestMapping(path = "/books", consumes = "application/json", produces = "application/json")[m
[32m+[m[32mpublic class BooksController {[m
[32m+[m[32m    BookRepository bookRepo;[m
[32m+[m
[32m+[m[32m    @Autowired[m
[32m+[m[32m    public BooksController (BookRepository bookRepo) {[m
[32m+[m[32m        this.bookRepo = bookRepo;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @PostMapping[m
[32m+[m[32m    public ResponseEntity<?> processPostBook(@Valid @RequestBody BookDTO book){[m
[32m+[m[32m        BookDTO savedBook = bookRepo.save(book);[m
[32m+[m
[32m+[m[32m        URI location = ServletUriComponentsBuilder.fromCurrentContextPath()[m
[32m+[m[32m                .path("/{title}")[m
[32m+[m[32m                .buildAndExpand(savedBook.getTitle())[m
[32m+[m[32m                .toUri();[m
[32m+[m
[32m+[m[32m        return ResponseEntity.created(location).body(book);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/io/desafio/VirtualLibabry/domainDTO/BookDTO.java b/src/main/java/io/desafio/VirtualLibabry/domainDTO/BookDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4885b38[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/io/desafio/VirtualLibabry/domainDTO/BookDTO.java[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mpackage io.desafio.VirtualLibabry.domainDTO;[m
[32m+[m
[32m+[m[32mimport jakarta.persistence.Entity;[m
[32m+[m[32mimport jakarta.persistence.Id;[m
[32m+[m[32mimport jakarta.persistence.Table;[m
[32m+[m[32mimport jakarta.validation.constraints.Min;[m
[32m+[m[32mimport jakarta.validation.constraints.NotNull;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m
[32m+[m[32mimport java.time.OffsetDateTime;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32m@Entity[m
[32m+[m[32mpublic class BookDTO {[m
[32m+[m[32m    @NotNull[m
[32m+[m[32m    @Id[m
[32m+[m[32m    String title;[m
[32m+[m
[32m+[m[32m    @NotNull[m
[32m+[m[32m    String author;[m
[32m+[m
[32m+[m[32m    @Min(value = 1500,message = "Year may be higher than 1500")[m
[32m+[m[32m    @NotNull[m
[32m+[m[32m    int releaseYear;[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/io/desafio/VirtualLibabry/repository/BookRepository.java b/src/main/java/io/desafio/VirtualLibabry/repository/BookRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..060747f[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/io/desafio/VirtualLibabry/repository/BookRepository.java[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mpackage io.desafio.VirtualLibabry.repository;[m
[32m+[m
[32m+[m[32mimport io.desafio.VirtualLibabry.domainDTO.BookDTO;[m
[32m+[m[32mimport org.springframework.data.repository.CrudRepository;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mpublic interface BookRepository extends CrudRepository<BookDTO,String> {[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/resources/application.properties b/src/main/resources/application.properties[m
[1mindex a521fa5..96bf72c 100644[m
[1m--- a/src/main/resources/application.properties[m
[1m+++ b/src/main/resources/application.properties[m
[36m@@ -1 +1,5 @@[m
 spring.application.name=Virtual-Libabry[m
[32m+[m[32mspring.datasource.url=jdbc:h2:mem:testdb[m
[32m+[m[32mspring.datasource.driverClassName=org.h2.Driver[m
[32m+[m[32mspring.h2.console.enabled=true[m
[32m+[m[32mspring.jpa.hibernate.ddl-auto=create-drop[m
\ No newline at end of file[m
[1mdiff --git a/src/test/java/io/desafio/Virtual/Libabry/VirtualLibabryApplicationTests.java b/src/test/java/io/desafio/VirtualLibabry/VirtualLibabryApplicationTests.java[m
[1msimilarity index 84%[m
[1mrename from src/test/java/io/desafio/Virtual/Libabry/VirtualLibabryApplicationTests.java[m
[1mrename to src/test/java/io/desafio/VirtualLibabry/VirtualLibabryApplicationTests.java[m
[1mindex f41d51a..096c3ef 100644[m
[1m--- a/src/test/java/io/desafio/Virtual/Libabry/VirtualLibabryApplicationTests.java[m
[1m+++ b/src/test/java/io/desafio/VirtualLibabry/VirtualLibabryApplicationTests.java[m
[36m@@ -1,4 +1,4 @@[m
[31m-package io.desafio.Virtual.Libabry;[m
[32m+[m[32mpackage io.desafio.VirtualLibabry;[m
 [m
 import org.junit.jupiter.api.Test;[m
 import org.springframework.boot.test.context.SpringBootTest;[m
